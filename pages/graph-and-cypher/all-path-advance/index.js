import React from "react";
import Head from "next/head";
import Breadcrumb from "../../../components/Breadcrumb";
import DocArticle from "../../../components/DocArticle";
import HighlightedOutput from "../../../components/HighlightedOutput";
import HighlightedJava from "../../../components/HighlightedJava";
import { NextCookies } from "next/dist/server/web/spec-extension/cookies";
import NextPageButton from "../../../components/NextPageButton/NextPageButton";

export default function AllPathAdvance() {
  return (
    <React.Fragment>
      <Head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>ALL_PATH (advance) - BangDB Graph & Cypher</title>
        <meta
          name="description"
          content="Learn about ALL_PATH (advance). Read the well-written documentation to know more about BangDB 2.0 Graph and Cypher."
        />
        <meta property="og:site_name" content="BangDB Docs" />
        <meta property="og:type" content="article" />
        <meta
          property="og:title"
          content="ALL_PATH (advance) - BangDB Graph & Cypher"
        />
        <meta
          property="og:description"
          content="Learn about ALL_PATH (advance). Read the well-written documentation to know more about BangDB 2.0 Graph and Cypher."
        />
        <meta
          property="og:image"
          content="https://bangdb.com/wp-content/uploads/2021/05/BangDBLogo_nowhite.png"
        />

        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@IQLECT" />
        <meta
          name="twitter:title"
          content="ALL_PATH (advance) - BangDB Graph & Cypher"
        />
        <meta
          name="twitter:description"
          content="Learn about ALL_PATH (advance). Read the well-written documentation to know more about BangDB 2.0 Graph and Cypher."
        />
        <meta
          name="twitter:image"
          content="https://bangdb.com/wp-content/uploads/2021/05/BangDBLogo_nowhite.png"
        />
      </Head>
      <DocArticle>
        <Breadcrumb text="Stream in BangDB" url="/stream" />
        <h1 className="article-title">ALL_PATH (advance)</h1>
        <div className="article-body">
          <p>
            As SHORT_PATH, we can find out all paths between two nodes, using
            any or specific relationship.
          </p>
          <p>
            ALL_PATH query - Let&apos;s find all paths between A and D. As you
            see, there are 15 possible paths between A and D. We should be
            careful while running ALL_PATH query, as it could result into costly
            computation.
          </p>
          <HighlightedJava code={`S=>(city:A)-[#ALL_PATH *]->(city:D)`} />
          <HighlightedOutput
            code={`{
   "path_count":15,
   "paths":[
      {
         "edges":[
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYROAD"
            }
         ],
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "label":"city",
               "name":"B"
            },
            {
               "name":"D",
               "label":"city"
            }
         ]
      },
      {
         "nodes":[
            {
               "label":"city",
               "name":"A"
            },
            {
               "name":"B",
               "label":"city"
            },
            {
               "name":"C",
               "label":"city"
            },
            {
               "label":"city",
               "name":"D"
            }
         ],
         "edges":[
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYROAD"
            }
         ]
      },
      {
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "label":"city",
               "name":"B"
            },
            {
               "name":"C",
               "label":"city"
            },
            {
               "name":"D",
               "label":"city"
            }
         ],
         "edges":[
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYAIR"
            }
         ]
      },
      {
         "edges":[
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYAIR"
            }
         ],
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "name":"B",
               "label":"city"
            },
            {
               "label":"city",
               "name":"D"
            }
         ]
      },
      {
         "edges":[
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYROAD"
            }
         ],
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "label":"city",
               "name":"B"
            },
            {
               "label":"city",
               "name":"C"
            },
            {
               "name":"D",
               "label":"city"
            }
         ]
      },
      {
         "edges":[
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYAIR"
            }
         ],
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "label":"city",
               "name":"B"
            },
            {
               "label":"city",
               "name":"C"
            },
            {
               "label":"city",
               "name":"D"
            }
         ]
      },
      {
         "nodes":[
            {
               "label":"city",
               "name":"A"
            },
            {
               "label":"city",
               "name":"D"
            }
         ],
         "edges":[
            {
               "rel":"BYROAD"
            }
         ]
      },
      {
         "nodes":[
            {
               "label":"city",
               "name":"A"
            },
            {
               "label":"city",
               "name":"B"
            },
            {
               "name":"D",
               "label":"city"
            }
         ],
         "edges":[
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYROAD"
            }
         ]
      },
      {
         "edges":[
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYROAD"
            }
         ],
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "label":"city",
               "name":"B"
            },
            {
               "label":"city",
               "name":"C"
            },
            {
               "name":"D",
               "label":"city"
            }
         ]
      },
      {
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "label":"city",
               "name":"B"
            },
            {
               "label":"city",
               "name":"C"
            },
            {
               "label":"city",
               "name":"D"
            }
         ],
         "edges":[
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYROAD"
            },
            {
               "rel":"BYAIR"
            }
         ]
      },
      {
         "edges":[
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYAIR"
            }
         ],
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "name":"B",
               "label":"city"
            },
            {
               "label":"city",
               "name":"D"
            }
         ]
      },
      {
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "label":"city",
               "name":"B"
            },
            {
               "name":"C",
               "label":"city"
            },
            {
               "name":"D",
               "label":"city"
            }
         ],
         "edges":[
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYROAD"
            }
         ]
      },
      {
         "nodes":[
            {
               "label":"city",
               "name":"A"
            },
            {
               "name":"B",
               "label":"city"
            },
            {
               "label":"city",
               "name":"C"
            },
            {
               "name":"D",
               "label":"city"
            }
         ],
         "edges":[
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYAIR"
            }
         ]
      },
      {
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "name":"C",
               "label":"city"
            },
            {
               "label":"city",
               "name":"D"
            }
         ],
         "edges":[
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYROAD"
            }
         ]
      },
      {
         "nodes":[
            {
               "name":"A",
               "label":"city"
            },
            {
               "label":"city",
               "name":"C"
            },
            {
               "name":"D",
               "label":"city"
            }
         ],
         "edges":[
            {
               "rel":"BYAIR"
            },
            {
               "rel":"BYAIR"
            }
         ]
      }
   ]
}`}
          />
        </div>
        <NextPageButton />
      </DocArticle>
    </React.Fragment>
  );
}

export async function getServerSideProps(context) {
  return {
    props: { graphSidebar: true },
  };
}
